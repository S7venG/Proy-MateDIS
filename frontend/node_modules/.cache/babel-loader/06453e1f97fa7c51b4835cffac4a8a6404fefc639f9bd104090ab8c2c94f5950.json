{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afgm7\\\\OneDrive\\\\Desktop\\\\Proy-MateDIS-1\\\\frontend\\\\src\\\\components\\\\Map.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst googleMapsApiKey = \"AIzaSyAVOh6ZXRiPCr0HpSAm0myYvsLD1oIWBTk\";\nconst containerStyle = {\n  width: \"100%\",\n  height: \"500px\"\n};\nconst defaultCenter = {\n  lat: -12.118,\n  lng: -77.01\n}; // Centro del mapa en Lima\n\nconst Map = () => {\n  _s();\n  const [userPosition, setUserPosition] = useState(null);\n  const [selectMode, setSelectMode] = useState(false);\n  const [buttonText, setButtonText] = useState(\"Seleccione su ubicación\");\n  const [isEditing, setIsEditing] = useState(false);\n  const mapRef = useRef(null);\n\n  // 📌 Obtener ubicación en tiempo real\n  const handleRealTimeLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        var _mapRef$current;\n        const newPosition = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n        setUserPosition(newPosition);\n        (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current.panTo(newPosition);\n      }, error => {\n        alert(\"Error obteniendo la ubicación: \" + error.message);\n      });\n    } else {\n      alert(\"Geolocalización no es compatible con este navegador.\");\n    }\n  };\n\n  // 📌 Seleccionar ubicación en el mapa con clic\n  const handleMapClick = useCallback(event => {\n    if (selectMode) {\n      setUserPosition({\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      });\n      setSelectMode(false);\n    }\n  }, [selectMode]);\n\n  // 📌 Editar manualmente coordenadas\n  const handleDoubleClick = () => {\n    setIsEditing(true);\n    setButtonText(\"\");\n  };\n  const handleBlur = () => {\n    setIsEditing(false);\n    updatePositionFromText();\n  };\n  const handleChange = e => {\n    setButtonText(e.target.value);\n  };\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      updatePositionFromText();\n      setIsEditing(false);\n    }\n  };\n\n  // 📌 Convertir texto en coordenadas\n  const updatePositionFromText = () => {\n    const coords = buttonText.split(\",\").map(coord => parseFloat(coord.trim()));\n    if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {\n      var _mapRef$current2;\n      const newPos = {\n        lat: coords[0],\n        lng: coords[1]\n      };\n      setUserPosition(newPos);\n      (_mapRef$current2 = mapRef.current) === null || _mapRef$current2 === void 0 ? void 0 : _mapRef$current2.panTo(newPos);\n    } else {\n      setButtonText(\"Seleccione su ubicación\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: googleMapsApiKey,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: defaultCenter,\n        zoom: 15,\n        onLoad: map => mapRef.current = map,\n        onClick: handleMapClick,\n        children: userPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-button\",\n          onClick: () => setSelectMode(true),\n          children: \"Seleccionar del mapa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-button\",\n          onClick: handleRealTimeLocation,\n          children: \"Ubicaci\\xF3n en tiempo real\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fixed-button\",\n          onDoubleClick: handleDoubleClick,\n          children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: buttonText,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            onKeyDown: handleKeyDown,\n            autoFocus: true,\n            className: \"transparent-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this) : buttonText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"aDdpPLC+r2kuLH32+DppSteQ814=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useRef","useCallback","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","googleMapsApiKey","containerStyle","width","height","defaultCenter","lat","lng","Map","_s","userPosition","setUserPosition","selectMode","setSelectMode","buttonText","setButtonText","isEditing","setIsEditing","mapRef","handleRealTimeLocation","navigator","geolocation","getCurrentPosition","position","_mapRef$current","newPosition","coords","latitude","longitude","current","panTo","error","alert","message","handleMapClick","event","latLng","handleDoubleClick","handleBlur","updatePositionFromText","handleChange","e","target","value","handleKeyDown","key","split","map","coord","parseFloat","trim","length","isNaN","_mapRef$current2","newPos","children","className","mapContainerStyle","center","zoom","onLoad","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onDoubleClick","type","onChange","onBlur","onKeyDown","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/afgm7/OneDrive/Desktop/Proy-MateDIS-1/frontend/src/components/Map.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from \"react\";\r\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\r\n\r\nconst googleMapsApiKey = \"AIzaSyAVOh6ZXRiPCr0HpSAm0myYvsLD1oIWBTk\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"500px\",\r\n};\r\n\r\nconst defaultCenter = { lat: -12.118, lng: -77.01 }; // Centro del mapa en Lima\r\n\r\nconst Map = () => {\r\n  const [userPosition, setUserPosition] = useState(null);\r\n  const [selectMode, setSelectMode] = useState(false);\r\n  const [buttonText, setButtonText] = useState(\"Seleccione su ubicación\");\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const mapRef = useRef(null);\r\n\r\n  // 📌 Obtener ubicación en tiempo real\r\n  const handleRealTimeLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const newPosition = {\r\n            lat: position.coords.latitude,\r\n            lng: position.coords.longitude,\r\n          };\r\n          setUserPosition(newPosition);\r\n          mapRef.current?.panTo(newPosition);\r\n        },\r\n        (error) => {\r\n          alert(\"Error obteniendo la ubicación: \" + error.message);\r\n        }\r\n      );\r\n    } else {\r\n      alert(\"Geolocalización no es compatible con este navegador.\");\r\n    }\r\n  };\r\n\r\n  // 📌 Seleccionar ubicación en el mapa con clic\r\n  const handleMapClick = useCallback((event) => {\r\n    if (selectMode) {\r\n      setUserPosition({\r\n        lat: event.latLng.lat(),\r\n        lng: event.latLng.lng(),\r\n      });\r\n      setSelectMode(false);\r\n    }\r\n  }, [selectMode]);\r\n\r\n  // 📌 Editar manualmente coordenadas\r\n  const handleDoubleClick = () => {\r\n    setIsEditing(true);\r\n    setButtonText(\"\");\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditing(false);\r\n    updatePositionFromText();\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setButtonText(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      updatePositionFromText();\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  // 📌 Convertir texto en coordenadas\r\n  const updatePositionFromText = () => {\r\n    const coords = buttonText.split(\",\").map(coord => parseFloat(coord.trim()));\r\n    if (coords.length === 2 && !isNaN(coords[0]) && !isNaN(coords[1])) {\r\n      const newPos = { lat: coords[0], lng: coords[1] };\r\n      setUserPosition(newPos);\r\n      mapRef.current?.panTo(newPos);\r\n    } else {\r\n      setButtonText(\"Seleccione su ubicación\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey={googleMapsApiKey}>\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={defaultCenter}\r\n          zoom={15}\r\n          onLoad={(map) => (mapRef.current = map)}\r\n          onClick={handleMapClick}\r\n        >\r\n          {userPosition && <Marker position={userPosition} />}\r\n        </GoogleMap>\r\n\r\n        <div className=\"button-container\">\r\n          <button className=\"option-button\" onClick={() => setSelectMode(true)}>\r\n            Seleccionar del mapa\r\n          </button>\r\n          <button className=\"option-button\" onClick={handleRealTimeLocation}>\r\n            Ubicación en tiempo real\r\n          </button>\r\n          <div className=\"fixed-button\" onDoubleClick={handleDoubleClick}>\r\n            {isEditing ? (\r\n              <input\r\n                type=\"text\"\r\n                value={buttonText}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                onKeyDown={handleKeyDown}\r\n                autoFocus\r\n                className=\"transparent-input\"\r\n              />\r\n            ) : (\r\n              buttonText\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </LoadScript>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}